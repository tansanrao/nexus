# ========================================
# HTTP Basic Authentication
# ========================================
# Credentials for accessing the web interface and API
HTTP_BASIC_AUTH_USERNAME=admin
HTTP_BASIC_AUTH_PASSWORD=changeme123

# ========================================
# PostgreSQL Database Configuration
# ========================================
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=nexus
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme456

# ========================================
# API Server Configuration
# ========================================
API_PORT=8000
RUST_LOG=info

# Text Embeddings Inference endpoint (external TEI service)
EMBEDDINGS_URL=http://100.65.8.15:8080
EMBEDDINGS_MODEL_ID=Qwen/Qwen3-Embedding-0.6B

# Meilisearch configuration
MEILISEARCH_URL=http://meilisearch:7700
MEILI_MASTER_KEY=dev-secret
MEILISEARCH_MASTER_KEY=dev-secret
MEILISEARCH_PORT=7700
MEILI_EXPERIMENTAL_FEATURES=vector-store
SEARCH_EMBEDDING_DIM=1024

# Mirror storage location for mailing list repositories (inside container)
# Docker: /app/mirrors (mounted from host)
# Local: ./mirrors (relative to project root)
MIRROR_BASE_PATH=/app/mirrors

# Threading cache storage location for binary cache files (inside container)
# Docker: /app/cache (mounted from host)
# Local: ./cache (relative to project root)
THREADING_CACHE_BASE_PATH=/app/cache

# ========================================
# Docker Bind Mount Configuration
# ========================================
# Host paths for bind mounts (paths on your server)
# These directories must exist before starting containers

# PostgreSQL data directory
HOST_POSTGRES_DATA_PATH=/mnt/nexus/db

# Grokmirror repository storage
HOST_MIRROR_DATA_PATH=/mnt/nexus/mirrors

# Threading cache storage
HOST_CACHE_DATA_PATH=/mnt/nexus/cache

# Meilisearch data directory
HOST_MEILI_DATA_PATH=/mnt/nexus/meili

# ========================================
# Frontend Configuration
# ========================================
FRONTEND_PORT=80

# API URL for frontend (build-time variable)
# Use /api for nginx proxy (default for Docker deployment)
# Use http://localhost:8000/api for direct API connection (local dev)
VITE_API_URL=/api

# ========================================
# External Access Configuration
# ========================================
# External URL for accessing the service via Cloudflare Tunnel or other proxy
# Set this to your public HTTPS URL when deploying behind a reverse proxy
# Example: https://nexus.example.com
# Leave empty for local development
EXTERNAL_URL=

# ========================================
# Setup Instructions
# ========================================
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Update the credentials:
#    - Change HTTP_BASIC_AUTH_USERNAME and HTTP_BASIC_AUTH_PASSWORD
#    - Change POSTGRES_PASSWORD to a secure value
#
# 3. Create bind mount directories (for production deployment):
#    sudo mkdir -p /mnt/nexus/db /mnt/nexus/mirrors /mnt/nexus/cache
#    sudo chown -R $(id -u):$(id -g) /mnt/nexus
#
#    Or update HOST_*_PATH variables to your preferred locations
#
# 4. For local development:
#    - Set HOST_POSTGRES_DATA_PATH=./data/postgres
#    - Set HOST_MIRROR_DATA_PATH=./data/mirrors
#    - Set HOST_CACHE_DATA_PATH=./data/cache
#    - Set MIRROR_BASE_PATH=./mirrors
#    - Set THREADING_CACHE_BASE_PATH=./cache
#    - Set VITE_API_URL=http://localhost:8000/api
#    - Create local directories: mkdir -p ./data/{postgres,mirrors,cache}
#
# 5. Keep .env file secure and never commit it to version control
